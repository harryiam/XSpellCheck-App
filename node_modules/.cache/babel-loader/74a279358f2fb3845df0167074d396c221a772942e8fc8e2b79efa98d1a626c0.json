{"ast":null,"code":"var _jsxFileName = \"/Users/ambatiharitha/Desktop/crio-assingnments/XSpellCheck-App/XSpellCheck-App/src/SpellCheck.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Define a custom dictionary of words and their corrections\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customDictionary = {\n  teh: \"the\",\n  wrok: \"work\",\n  fot: \"for\",\n  exampl: \"example\"\n};\nconst SpellCheckApp = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [suggestedText, setSuggestedText] = useState(\"\");\n  const handleInputChange = e => {\n    const text = e.target.value;\n    setInputText(text);\n\n    // Implement a basic spelling check and correction\n    const words = text.split(\" \");\n    const correctedWords = words.map(word => {\n      const correctedWord = customDictionary[word.toLowerCase()];\n      return correctedWord || word;\n    });\n    const correctedText = correctedWords.join(\" \");\n\n    // Set the suggested text (first corrected word)\n    const firstCorrection = correctedWords.find((word, index) => word !== words[index]);\n    setSuggestedText(firstCorrection || \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spell Check and Auto-Correction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: inputText,\n      onChange: handleInputChange,\n      placeholder: \"Enter text...\",\n      rows: 5,\n      cols: 40\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), suggestedText && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Did you mean: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: suggestedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this), \"?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SpellCheckApp, \"DWz/TEu0BEDClGSki74qsq/7d8M=\");\n_c = SpellCheckApp;\nexport default SpellCheckApp;\nvar _c;\n$RefreshReg$(_c, \"SpellCheckApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","customDictionary","teh","wrok","fot","exampl","SpellCheckApp","_s","inputText","setInputText","suggestedText","setSuggestedText","handleInputChange","e","text","target","value","words","split","correctedWords","map","word","correctedWord","toLowerCase","correctedText","join","firstCorrection","find","index","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","rows","cols","_c","$RefreshReg$"],"sources":["/Users/ambatiharitha/Desktop/crio-assingnments/XSpellCheck-App/XSpellCheck-App/src/SpellCheck.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n// Define a custom dictionary of words and their corrections\nconst customDictionary = {\n  teh: \"the\",\n  wrok: \"work\",\n  fot: \"for\",\n  exampl: \"example\",\n};\n\nconst SpellCheckApp = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [suggestedText, setSuggestedText] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    const text = e.target.value;\n    setInputText(text);\n\n    // Implement a basic spelling check and correction\n    const words = text.split(\" \");\n    const correctedWords = words.map((word) => {\n      const correctedWord = customDictionary[word.toLowerCase()];\n      return correctedWord || word;\n    });\n\n    const correctedText = correctedWords.join(\" \");\n\n    // Set the suggested text (first corrected word)\n    const firstCorrection = correctedWords.find(\n      (word, index) => word !== words[index]\n    );\n    setSuggestedText(firstCorrection || \"\");\n  };\n\n  return (\n    <div>\n      <h1>Spell Check and Auto-Correction</h1>\n      <textarea\n        value={inputText}\n        onChange={handleInputChange}\n        placeholder=\"Enter text...\"\n        rows={5}\n        cols={40}\n      />\n      {suggestedText && (\n        <p>\n          Did you mean: <strong>{suggestedText}</strong>?\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default SpellCheckApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG;EACvBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,MAAM;EACZC,GAAG,EAAE,KAAK;EACVC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMc,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3BP,YAAY,CAACK,IAAI,CAAC;;IAElB;IACA,MAAMG,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC;IAC7B,MAAMC,cAAc,GAAGF,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAK;MACzC,MAAMC,aAAa,GAAGrB,gBAAgB,CAACoB,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC;MAC1D,OAAOD,aAAa,IAAID,IAAI;IAC9B,CAAC,CAAC;IAEF,MAAMG,aAAa,GAAGL,cAAc,CAACM,IAAI,CAAC,GAAG,CAAC;;IAE9C;IACA,MAAMC,eAAe,GAAGP,cAAc,CAACQ,IAAI,CACzC,CAACN,IAAI,EAAEO,KAAK,KAAKP,IAAI,KAAKJ,KAAK,CAACW,KAAK,CACvC,CAAC;IACDjB,gBAAgB,CAACe,eAAe,IAAI,EAAE,CAAC;EACzC,CAAC;EAED,oBACE1B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCjC,OAAA;MACEgB,KAAK,EAAER,SAAU;MACjB0B,QAAQ,EAAEtB,iBAAkB;MAC5BuB,WAAW,EAAC,eAAe;MAC3BC,IAAI,EAAE,CAAE;MACRC,IAAI,EAAE;IAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EACDvB,aAAa,iBACZV,OAAA;MAAA6B,QAAA,GAAG,gBACa,eAAA7B,OAAA;QAAA6B,QAAA,EAASnB;MAAa;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,KAChD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAzCID,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}